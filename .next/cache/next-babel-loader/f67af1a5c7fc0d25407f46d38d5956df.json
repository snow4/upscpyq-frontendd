{"ast":null,"code":"var _jsxFileName = \"/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/pages/questions.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getupscSubjectQuery } from \"../actions/asyncActions\";\nimport Card from \"../hoc/card\";\nconst Wrapper = styled.div``;\n\nclass Questions extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {});\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      // this.props.subjectQuery(\"History\");\n      const url = window.location.href.split(\"=\")[1];\n\n      if (url.includes(\"_\")) {\n        console.log(\"url\", url.replace(\"_\", \" \"));\n        this.props.subjectQuery(url.replace(\"_\", \" \"));\n      } else {\n        getupscSubjectQuery(url);\n      }\n    });\n  }\n\n  render() {\n    console.log(\"questions props\", this.props);\n    const {} = this.prop;\n    return __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 12\n      }\n    }, \"Questions\");\n  }\n\n}\n\nconst mapStateToProps = store => {\n  console.log(\"store\", store);\n  return {\n    upscQuestion: store.upscQuestion\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    subjectQuery: data => dispatch(getupscSubjectQuery(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/pages/questions.js"],"names":["React","Component","styled","connect","getupscSubjectQuery","Card","Wrapper","div","Questions","url","window","location","href","split","includes","console","log","replace","props","subjectQuery","render","prop","mapStateToProps","store","upscQuestion","mapDispatchToProps","dispatch","data"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,mBAAT,QAAoC,yBAApC;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,MAAMC,OAAO,GAAGJ,MAAM,CAACK,GAAI,EAA3B;;AAEA,MAAMC,SAAN,SAAwBP,SAAxB,CAAkC;AAAA;AAAA;;AAAA,mCACxB,EADwB;;AAAA,+CAGZ,MAAM;AACxB;AACA,YAAMQ,GAAG,GAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqBC,KAArB,CAA2B,GAA3B,EAAgC,CAAhC,CAAZ;;AAEA,UAAIJ,GAAG,CAACK,QAAJ,CAAa,GAAb,CAAJ,EAAuB;AACrBC,QAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBP,GAAG,CAACQ,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAnB;AACA,aAAKC,KAAL,CAAWC,YAAX,CAAwBV,GAAG,CAACQ,OAAJ,CAAY,GAAZ,EAAiB,GAAjB,CAAxB;AACD,OAHD,MAGO;AACLb,QAAAA,mBAAmB,CAACK,GAAD,CAAnB;AACD;AACF,KAb+B;AAAA;;AAchCW,EAAAA,MAAM,GAAG;AACPL,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+B,KAAKE,KAApC;AACA,UAAM,KAAK,KAAKG,IAAhB;AACA,WAAO,MAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD;;AAlB+B;;AAqBlC,MAAMC,eAAe,GAAGC,KAAK,IAAI;AAC/BR,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBO,KAArB;AACA,SAAO;AACLC,IAAAA,YAAY,EAAED,KAAK,CAACC;AADf,GAAP;AAGD,CALD;;AAMA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACrC,SAAO;AACLP,IAAAA,YAAY,EAAEQ,IAAI,IAAID,QAAQ,CAACtB,mBAAmB,CAACuB,IAAD,CAApB;AADzB,GAAP;AAGD,CAJD;;AAMA,eAAexB,OAAO,CAACmB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CjB,SAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getupscSubjectQuery } from \"../actions/asyncActions\";\nimport Card from \"../hoc/card\";\nconst Wrapper = styled.div``;\n\nclass Questions extends Component {\n  state = {};\n\n  componentDidMount = () => {\n    // this.props.subjectQuery(\"History\");\n    const url = window.location.href.split(\"=\")[1];\n\n    if (url.includes(\"_\")) {\n      console.log(\"url\", url.replace(\"_\", \" \"));\n      this.props.subjectQuery(url.replace(\"_\", \" \"));\n    } else {\n      getupscSubjectQuery(url);\n    }\n  };\n  render() {\n    console.log(\"questions props\", this.props);\n    const {} = this.prop\n    return <Wrapper>Questions</Wrapper>;\n  }\n}\n\nconst mapStateToProps = store => {\n  console.log(\"store\", store);\n  return {\n    upscQuestion: store.upscQuestion\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    subjectQuery: data => dispatch(getupscSubjectQuery(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}