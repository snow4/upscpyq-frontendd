{"ast":null,"code":"var _jsxFileName = \"/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/hoc/card.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nconst Wrapper = styled.div`\n  margin: 0 3em 0 3em;\n  @media only screen and (max-width: 600px) {\n    margin: unset;\n  }\n`;\nconst Container = styled.div`\n  padding: 0.5em 1em 0.5em 1em;\n  display: grid;\n  grid-row-gap: 1em;\n`;\nconst OptionsContainer = styled.div`\n  padding-left: 5em;\n  display: grid;\n  grid-row-gap: 0.2em;\n  @media only screen and (max-width: 600px) {\n    padding-left: unset;\n  }\n`;\nconst Question = styled.div`\n  display: grid;\n  grid-row-gap: 1em;\n\n  > div {\n    line-height: 20px;\n    /* font-size: 1em; */\n    /* padding: 1em 0 1em 0; */\n  }\n  > b {\n    padding-right: 1em;\n  }\n`;\nconst Option = styled.div`\n  display: grid;\n  cursor: pointer;\n  grid-template-columns: 0.2fr 8fr;\n  grid-gap: 1em;\n  background: #d9ffb3;\n  > div {\n    line-height: 20px;\n  }\n  > span {\n    padding-right: 1em;\n    background: #336600;\n    color: #fff;\n    font-size: 2em;\n    border-radius: 50%;\n    justify-content: center;\n  }\n`;\nconst Count = styled.div`\n  /* padding:1em; */\n  font-size: 1.3em;\n  font-weight: 600;\n  padding-right: 0.5em;\n  border-bottom: 1px solid #e6e6e6;\n  padding-bottom: 1em;\n`;\nconst Explaination = styled.div``;\nconst Year = styled.div``;\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selected: true,\n      wrong: false,\n      option1: false,\n      option2: false,\n      option3: false,\n      option4: false,\n      selectcolor: // `${this.state.show}` ? \"#336600\" :\n      \"tomato\"\n    });\n\n    _defineProperty(this, \"clickHandler\", e => {\n      const {\n        answer\n      } = this.props;\n      console.log(\"in click\", e.target.getAttribute(\"name\"), \"answer \", answer);\n\n      if (e.target.getAttribute(\"name\") == answer) {\n        this.setState({\n          selected: true,\n          [answer]: true\n        });\n      } else {\n        this.setState({\n          wrong: true,\n          [answer]: true\n        });\n      }\n    });\n  }\n\n  render() {\n    // console.log(\"props\", this.props);\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n      count,\n      answer,\n      year\n    } = this.props;\n    return __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }\n    }, __jsx(Question, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }\n    }, __jsx(Count, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"Question \", count + 1), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, question)), __jsx(OptionsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }\n    }, __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: this.state.selectcolor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      style: {\n        display: this.state.selected\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, \"A\"), __jsx(CloseOutlined, {\n      style: {\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        display: this.state.option1 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 15\n      }\n    }, option1)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }\n    }, \"B\"), __jsx(CloseOutlined, {\n      style: {\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        display: this.state.option2 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, option2)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }\n    }, \"C\"), __jsx(CloseOutlined, {\n      style: {\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        display: this.state.option3 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 15\n      }\n    }, option3)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }\n    }, \"D\"), __jsx(CloseOutlined, {\n      style: {\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        display: this.state.option4 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 15\n      }\n    }, option4))), __jsx(Explaination, {\n      style: {\n        display: this.state.show\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 11\n      }\n    }, this.state.selected, \"answer : \", answer, __jsx(Year, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 13\n      }\n    }, \"UPSC \", year))));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/hoc/card.js"],"names":["React","Component","styled","CloseOutlined","CheckOutlined","Wrapper","div","Container","OptionsContainer","Question","Option","Count","Explaination","Year","Card","selected","wrong","option1","option2","option3","option4","selectcolor","e","answer","props","console","log","target","getAttribute","setState","render","question","count","year","clickHandler","color","state","display","show"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\n\nconst Wrapper = styled.div`\n  margin: 0 3em 0 3em;\n  @media only screen and (max-width: 600px) {\n    margin: unset;\n  }\n`;\nconst Container = styled.div`\n  padding: 0.5em 1em 0.5em 1em;\n  display: grid;\n  grid-row-gap: 1em;\n`;\nconst OptionsContainer = styled.div`\n  padding-left: 5em;\n  display: grid;\n  grid-row-gap: 0.2em;\n  @media only screen and (max-width: 600px) {\n    padding-left: unset;\n  }\n`;\nconst Question = styled.div`\n  display: grid;\n  grid-row-gap: 1em;\n\n  > div {\n    line-height: 20px;\n    /* font-size: 1em; */\n    /* padding: 1em 0 1em 0; */\n  }\n  > b {\n    padding-right: 1em;\n  }\n`;\n\nconst Option = styled.div`\n  display: grid;\n  cursor: pointer;\n  grid-template-columns: 0.2fr 8fr;\n  grid-gap: 1em;\n  background: #d9ffb3;\n  > div {\n    line-height: 20px;\n  }\n  > span {\n    padding-right: 1em;\n    background: #336600;\n    color: #fff;\n    font-size: 2em;\n    border-radius: 50%;\n    justify-content: center;\n  }\n`;\n\nconst Count = styled.div`\n  /* padding:1em; */\n  font-size: 1.3em;\n  font-weight: 600;\n  padding-right: 0.5em;\n  border-bottom: 1px solid #e6e6e6;\n  padding-bottom: 1em;\n`;\nconst Explaination = styled.div``;\nconst Year = styled.div``;\n\nclass Card extends Component {\n  state = {\n    selected: true,\n    wrong: false,\n    option1: false,\n    option2: false,\n    option3: false,\n    option4: false,\n    selectcolor:\n      // `${this.state.show}` ? \"#336600\" :\n      \"tomato\"\n  };\n\n  clickHandler = e => {\n    const { answer } = this.props;\n    console.log(\"in click\", e.target.getAttribute(\"name\"), \"answer \", answer);\n    if (e.target.getAttribute(\"name\") == answer) {\n      this.setState({ selected: true, [answer]: true });\n    } else {\n      this.setState({ wrong: true, [answer]: true });\n    }\n  };\n\n  render() {\n    // console.log(\"props\", this.props);\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n      count,\n      answer,\n      year\n    } = this.props;\n    return (\n      <Wrapper>\n        <Container>\n          <Question>\n            <Count>Question {count + 1}</Count>\n            <div>{question}</div>\n          </Question>\n          <OptionsContainer>\n            <Option onClick={e => this.clickHandler(e)} name=\"option1\">\n              <span\n                style={{\n                  color: this.state.selectcolor\n                }}\n              >\n                <b style={{ display: this.state.selected }}>A</b>\n                <CloseOutlined\n                  style={{ display: this.state.wrong ? \"block\" : \"none\" }}\n                />\n                <CheckOutlined\n                  style={{ display: this.state.option1 ? \"block\" : \"none\" }}\n                />\n              </span>\n              <div name=\"option1\">{option1}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option2\">\n              <span>\n                <b >B</b>\n                <CloseOutlined\n                  style={{ display: this.state.wrong ? \"block\" : \"none\" }}\n                />\n                <CheckOutlined\n                  style={{ display: this.state.option2 ? \"block\" : \"none\" }}\n                />\n              </span>\n              <div name=\"option2\">{option2}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option3\">\n              <span>\n                <b>C</b>\n                <CloseOutlined\n                  style={{ display: this.state.wrong ? \"block\" : \"none\" }}\n                />\n                <CheckOutlined\n                  style={{ display: this.state.option3 ? \"block\" : \"none\" }}\n                />\n              </span>\n              <div name=\"option3\">{option3}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option4\">\n              <span>\n                <b>D</b>\n\n                <CloseOutlined\n                  style={{ display: this.state.wrong ? \"block\" : \"none\" }}\n                />\n                <CheckOutlined\n                  style={{ display: this.state.option4 ? \"block\" : \"none\" }}\n                />\n              </span>\n              <div name=\"option4\">{option4}</div>\n            </Option>\n          </OptionsContainer>\n          <Explaination style={{ display: this.state.show }}>\n            {this.state.selected}\n            answer : {answer}\n            <Year>UPSC {year}</Year>\n          </Explaination>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}