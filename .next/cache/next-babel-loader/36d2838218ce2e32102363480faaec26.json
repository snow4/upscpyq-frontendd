{"ast":null,"code":"var _jsxFileName = \"/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/pages/questions.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getupscSubjectQuery } from \"../actions/asyncActions\";\nimport Card from \"../hoc/card\";\nimport Layout from \"../components/Layout\";\nconst Wrapper = styled.div``;\nconst Container = styled.div`\n  display: grid;\n  grid-column-gap: 2em;\n  margin: 0 6em 0 0.03em;\n  > h1 {\n    text-align: center;\n  }\n`;\nconst Result = styled.div`\n  position: fixed;\n  right: 32px;\n  bottom: 102px;\n  z-index: 2147483640;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  cursor: pointer;\n  background: grey;\n  padding: 1em;\n`;\n\nclass Questions extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      query: \"\",\n      correct: 0\n    });\n\n    _defineProperty(this, \"componentDidMount\", () => {\n      // this.props.subjectQuery(\"History\");\n      const url = window.location.href.split(\"=\")[1];\n      this.setState({\n        query: url\n      });\n\n      if (url.includes(\"_\")) {\n        // console.log(\"url\", url.replace(\"_\", \" \"));\n        // this.props.subjectQuery(url.replace(\"_\", \" \"));\n        getupscSubjectQuery(url);\n      } else {\n        getupscSubjectQuery(url);\n      }\n    });\n\n    _defineProperty(this, \"totalCorrect\", data => {\n      this.setState({\n        correct: this.state.correct + 1\n      });\n    });\n  }\n\n  render() {\n    const {\n      upscQuestion\n    } = this.props;\n    console.log(\"total correct called\", this.state.correct);\n    const Question = upscQuestion ? upscQuestion.map((d, i) => {\n      return __jsx(Card, _extends({}, d, {\n        count: i,\n        totalCorrect: this.totalCorrect,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }\n      }));\n    }) : [];\n    return __jsx(Layout, {\n      title: this.state.query,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, __jsx(Result, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, \"Total Correct : \", this.state.correct), __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, Question)));\n  }\n\n}\n\nconst mapStateToProps = store => {\n  console.log(\"store\", store);\n  return {\n    upscQuestion: store.upscSubjectQuestions,\n    loader: s\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    subjectQuery: data => dispatch(getupscSubjectQuery(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/pages/questions.js"],"names":["React","Component","styled","connect","getupscSubjectQuery","Card","Layout","Wrapper","div","Container","Result","Questions","query","correct","url","window","location","href","split","setState","includes","data","state","render","upscQuestion","props","console","log","Question","map","d","i","totalCorrect","mapStateToProps","store","upscSubjectQuestions","loader","s","mapDispatchToProps","dispatch","subjectQuery"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { connect } from \"react-redux\";\nimport { getupscSubjectQuery } from \"../actions/asyncActions\";\nimport Card from \"../hoc/card\";\n\nimport Layout from \"../components/Layout\";\nconst Wrapper = styled.div``;\nconst Container = styled.div`\n  display: grid;\n  grid-column-gap: 2em;\n  margin: 0 6em 0 0.03em;\n  > h1 {\n    text-align: center;\n  }\n`;\n\nconst Result = styled.div`\n  position: fixed;\n  right: 32px;\n  bottom: 102px;\n  z-index: 2147483640;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  -webkit-box-orient: vertical;\n  -webkit-box-direction: normal;\n  -ms-flex-direction: column;\n  flex-direction: column;\n  cursor: pointer;\n  background: grey;\n  padding: 1em;\n`;\nclass Questions extends Component {\n  state = {\n    query: \"\",\n    correct: 0\n  };\n\n  componentDidMount = () => {\n    // this.props.subjectQuery(\"History\");\n    const url = window.location.href.split(\"=\")[1];\n    this.setState({ query: url });\n    if (url.includes(\"_\")) {\n      // console.log(\"url\", url.replace(\"_\", \" \"));\n      // this.props.subjectQuery(url.replace(\"_\", \" \"));\n      getupscSubjectQuery(url);\n    } else {\n      getupscSubjectQuery(url);\n    }\n  };\n\n  totalCorrect = data => {\n    this.setState({ correct: this.state.correct + 1 });\n  };\n\n  render() {\n    const { upscQuestion } = this.props;\n    console.log(\"total correct called\", this.state.correct);\n    const Question = upscQuestion\n      ? upscQuestion.map((d, i) => {\n          return <Card {...d} count={i} totalCorrect={this.totalCorrect} />;\n        })\n      : [];\n\n    return (\n      <Layout title={this.state.query}>\n        <Wrapper>\n          <Result>Total Correct : {this.state.correct}</Result>\n          <Container>\n            {/* <h1>{this.state.query}</h1> */}\n            {Question}\n          </Container>\n        </Wrapper>\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = store => {\n  console.log(\"store\", store);\n  return {\n    upscQuestion: store.upscSubjectQuestions,\n    loader:s\n  };\n};\nconst mapDispatchToProps = dispatch => {\n  return {\n    subjectQuery: data => dispatch(getupscSubjectQuery(data))\n    \n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Questions);\n"]},"metadata":{},"sourceType":"module"}