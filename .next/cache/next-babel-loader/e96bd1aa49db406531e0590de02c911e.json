{"ast":null,"code":"var _jsxFileName = \"/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/hoc/card.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\nconst Wrapper = styled.div`\n  margin: 0 3em 0 3em;\n  @media only screen and (max-width: 600px) {\n    margin: unset;\n  }\n`;\nconst Container = styled.div`\n  padding: 0.5em 1em 0.5em 1em;\n  display: grid;\n  grid-row-gap: 1em;\n  border-bottom: 2px solid #e0e0d1;\n`;\nconst OptionsContainer = styled.div`\n  padding-left: 5em;\n  display: grid;\n  grid-row-gap: 0.2em;\n  @media only screen and (max-width: 600px) {\n    padding-left: unset;\n  }\n`;\nconst Question = styled.div`\n  display: grid;\n  grid-row-gap: 1em;\n\n  > div {\n    line-height: 20px;\n    /* font-size: 1em; */\n    /* padding: 1em 0 1em 0; */\n  }\n  > b {\n    padding-right: 1em;\n  }\n`;\nconst Option = styled.div`\n  display: grid;\n  cursor: pointer;\n  grid-template-columns: 0.2fr 8fr;\n  grid-gap: 1em;\n  background: #d9ffb3;\n  > div {\n    line-height: 20px;\n  }\n  > span {\n    padding-right: 1em;\n    background: #336600;\n    color: #fff;\n    font-size: 2em;\n    border-radius: 50%;\n    justify-content: center;\n  }\n`;\nconst Count = styled.div`\n  /* padding:1em; */\n  font-size: 1.3em;\n  font-weight: 600;\n  padding-right: 0.5em;\n  border-bottom: 1px solid #e6e6e6;\n  padding-bottom: 1em;\n`;\nconst Explaination = styled.div`\n  border: 1px solid #e0e0d1;\n  padding: 0.5em 1em 0.5em 1em;\n`;\nconst OtherOptions = styled.div`\n  display: flex;\n  color: #003300;\n  font-weight: 700;\n  > div {\n    margin-right: 3em;\n    cursor: pointer;\n  }\n`;\nconst Year = styled.div``;\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selected: true,\n      ShowExplaination: false,\n      wrong: false,\n      option1: false,\n      option2: false,\n      option3: false,\n      option4: false,\n      selectcolor: // `${this.state.show}` ? \"#336600\" :\n      \"tomato\"\n    });\n\n    _defineProperty(this, \"clickHandler\", e => {\n      const {\n        answer\n      } = this.props;\n      console.log(\"in click\", e.target);\n\n      if (e.target.getAttribute(\"name\") == answer) {\n        this.setState({\n          selected: false,\n          [answer]: true,\n          wrong: true,\n          ShowExplaination: true\n        });\n      } else {\n        this.setState({\n          wrong: true,\n          [answer]: true,\n          selected: false,\n          ShowExplaination: true\n        });\n      }\n    });\n\n    _defineProperty(this, \"explainationHandler\", () => {\n      this.setState(prevState => ({\n        ShowExplaination: !prevState.ShowExplaination\n      }));\n    });\n  }\n\n  render() {\n    console.log(\"props\", this.props);\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n      count,\n      answer,\n      year,\n      explaination,\n      subject\n    } = this.props;\n    const link = \"/questions\";\n    return __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 7\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }\n    }, __jsx(Question, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }\n    }, __jsx(Count, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 13\n      }\n    }, \"Question \", count + 1), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }\n    }, question)), __jsx(OptionsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }\n    }, __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      style: {\n        display: this.state.selected ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    }, \"A\"), __jsx(CloseOutlined, {\n      style: {\n        color: \"red\",\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        color: \"blue\",\n        display: this.state.option1 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 15\n      }\n    }, option1)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      style: {\n        display: this.state.selected ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 17\n      }\n    }, \"B\"), __jsx(CloseOutlined, {\n      style: {\n        color: \"red\",\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        color: \"blue\",\n        display: this.state.option2 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 15\n      }\n    }, option2)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      style: {\n        display: this.state.selected ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }\n    }, \"C\"), __jsx(CloseOutlined, {\n      style: {\n        color: \"red\",\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        color: \"blue\",\n        display: this.state.option3 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 15\n      }\n    }, option3)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      style: {\n        display: this.state.selected ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }\n    }, \"D\"), __jsx(CloseOutlined, {\n      style: {\n        color: \"red\",\n        display: this.state.wrong ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }\n    }), __jsx(CheckOutlined, {\n      style: {\n        color: \"blue\",\n        display: this.state.option4 ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 15\n      }\n    }, option4))), __jsx(OtherOptions, {\n      style: {\n        display: this.state.show\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }\n    }, __jsx(Year, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }\n    }, \"UPSC \", year), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 13\n      }\n    }, __jsx(Link, {\n      href: {\n        pathname: link,\n        query: {\n          keyword: subject\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 15\n      }\n    }, subject)), __jsx(\"div\", {\n      onClick: this.explainationHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 13\n      }\n    }, \"Explaination\")), __jsx(Explaination, {\n      style: {\n        display: this.state.ShowExplaination ? \"block\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }\n    }, explaination)));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/hoc/card.js"],"names":["React","Component","styled","CloseOutlined","CheckOutlined","Link","Wrapper","div","Container","OptionsContainer","Question","Option","Count","Explaination","OtherOptions","Year","Card","selected","ShowExplaination","wrong","option1","option2","option3","option4","selectcolor","e","answer","props","console","log","target","getAttribute","setState","prevState","render","question","count","year","explaination","subject","link","clickHandler","display","state","color","show","pathname","query","keyword","explainationHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { CloseOutlined, CheckOutlined } from \"@ant-design/icons\";\nimport Link from \"next/link\";\n\nconst Wrapper = styled.div`\n  margin: 0 3em 0 3em;\n  @media only screen and (max-width: 600px) {\n    margin: unset;\n  }\n`;\nconst Container = styled.div`\n  padding: 0.5em 1em 0.5em 1em;\n  display: grid;\n  grid-row-gap: 1em;\n  border-bottom: 2px solid #e0e0d1;\n`;\nconst OptionsContainer = styled.div`\n  padding-left: 5em;\n  display: grid;\n  grid-row-gap: 0.2em;\n  @media only screen and (max-width: 600px) {\n    padding-left: unset;\n  }\n`;\nconst Question = styled.div`\n  display: grid;\n  grid-row-gap: 1em;\n\n  > div {\n    line-height: 20px;\n    /* font-size: 1em; */\n    /* padding: 1em 0 1em 0; */\n  }\n  > b {\n    padding-right: 1em;\n  }\n`;\n\nconst Option = styled.div`\n  display: grid;\n  cursor: pointer;\n  grid-template-columns: 0.2fr 8fr;\n  grid-gap: 1em;\n  background: #d9ffb3;\n  > div {\n    line-height: 20px;\n  }\n  > span {\n    padding-right: 1em;\n    background: #336600;\n    color: #fff;\n    font-size: 2em;\n    border-radius: 50%;\n    justify-content: center;\n  }\n`;\n\nconst Count = styled.div`\n  /* padding:1em; */\n  font-size: 1.3em;\n  font-weight: 600;\n  padding-right: 0.5em;\n  border-bottom: 1px solid #e6e6e6;\n  padding-bottom: 1em;\n`;\nconst Explaination = styled.div`\n  border: 1px solid #e0e0d1;\n  padding: 0.5em 1em 0.5em 1em;\n`;\nconst OtherOptions = styled.div`\n  display: flex;\n  color: #003300;\n  font-weight: 700;\n  > div {\n    margin-right: 3em;\n    cursor: pointer;\n  }\n`;\nconst Year = styled.div``;\n\nclass Card extends Component {\n  state = {\n    selected: true,\n    ShowExplaination: false,\n    wrong: false,\n    option1: false,\n    option2: false,\n    option3: false,\n    option4: false,\n    selectcolor:\n      // `${this.state.show}` ? \"#336600\" :\n      \"tomato\"\n  };\n\n  clickHandler = e => {\n    const { answer } = this.props;\n    console.log(\"in click\", e.target);\n    if (e.target.getAttribute(\"name\") == answer) {\n      this.setState({\n        selected: false,\n        [answer]: true,\n        wrong: true,\n        ShowExplaination: true\n      });\n    } else {\n      this.setState({\n        wrong: true,\n        [answer]: true,\n        selected: false,\n        ShowExplaination: true\n      });\n    }\n  };\n  explainationHandler = () => {\n    this.setState(prevState => ({\n      ShowExplaination: !prevState.ShowExplaination\n    }));\n  };\n  render() {\n    console.log(\"props\", this.props);\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n      count,\n      answer,\n      year,\n      explaination,\n      subject\n    } = this.props;\n    const link = \"/questions\";\n    return (\n      <Wrapper>\n        <Container>\n          <Question>\n            <Count>Question {count + 1}</Count>\n            <div>{question}</div>\n          </Question>\n          <OptionsContainer>\n            <Option onClick={e => this.clickHandler(e)} name=\"option1\">\n              <span\n              // style={{\n              //   color: this.state.selectcolor\n              // }}\n              >\n                <b style={{ display: this.state.selected ? \"block\" : \"none\" }}>\n                  A\n                </b>\n                <CloseOutlined\n                  style={{\n                    color: \"red\",\n                    display: this.state.wrong ? \"block\" : \"none\"\n                  }}\n                />\n                <CheckOutlined\n                  style={{\n                    color: \"blue\",\n                    display: this.state.option1 ? \"block\" : \"none\"\n                  }}\n                />\n              </span>\n              <div name=\"option1\">{option1}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option2\">\n              <span>\n                <b style={{ display: this.state.selected ? \"block\" : \"none\" }}>\n                  B\n                </b>\n                <CloseOutlined\n                  style={{\n                    color: \"red\",\n                    display: this.state.wrong ? \"block\" : \"none\"\n                  }}\n                />\n                <CheckOutlined\n                  style={{\n                    color: \"blue\",\n                    display: this.state.option2 ? \"block\" : \"none\"\n                  }}\n                />\n              </span>\n              <div name=\"option2\">{option2}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option3\">\n              <span>\n                <b style={{ display: this.state.selected ? \"block\" : \"none\" }}>\n                  C\n                </b>\n                <CloseOutlined\n                  style={{\n                    color: \"red\",\n                    display: this.state.wrong ? \"block\" : \"none\"\n                  }}\n                />\n                <CheckOutlined\n                  style={{\n                    color: \"blue\",\n                    display: this.state.option3 ? \"block\" : \"none\"\n                  }}\n                />\n              </span>\n              <div name=\"option3\">{option3}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option4\">\n              <span>\n                <b style={{ display: this.state.selected ? \"block\" : \"none\" }}>\n                  D\n                </b>\n\n                <CloseOutlined\n                  style={{\n                    color: \"red\",\n                    display: this.state.wrong ? \"block\" : \"none\"\n                  }}\n                />\n                <CheckOutlined\n                  style={{\n                    color: \"blue\",\n                    display: this.state.option4 ? \"block\" : \"none\"\n                  }}\n                />\n              </span>\n              <div name=\"option4\">{option4}</div>\n            </Option>\n          </OptionsContainer>\n          <OtherOptions style={{ display: this.state.show }}>\n            {/* {this.state.selected} */}\n            {/* answer : {answer} */}\n            <Year>UPSC {year}</Year>\n            <div>\n              <Link href={{ pathname: link, query: { keyword: subject } }}>\n                {subject}\n              </Link>\n            </div>\n\n            <div onClick={this.explainationHandler}>Explaination</div>\n          </OtherOptions>\n          <Explaination\n            style={{ display: this.state.ShowExplaination ? \"block\" : \"none\" }}\n          >\n            {explaination}\n          </Explaination>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}