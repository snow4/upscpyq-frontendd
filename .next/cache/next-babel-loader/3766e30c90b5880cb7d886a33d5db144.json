{"ast":null,"code":"var _jsxFileName = \"/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/hoc/card.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"antd\";\nconst Wrapper = styled.div`\n  margin: 0 3em 0 3em;\n  @media only screen and (max-width: 600px) {\n    margin: unset;\n  }\n`;\nconst Container = styled.div`\n  padding: 0.5em 1em 0.5em 1em;\n  display: grid;\n  grid-row-gap: 1em;\n`;\nconst OptionsContainer = styled.div`\n  padding-left: 5em;\n  display: grid;\n  grid-row-gap: 0.2em;\n  @media only screen and (max-width: 600px) {\n    padding-left: unset;\n  }\n`;\nconst Question = styled.div`\n  display: grid;\n  grid-row-gap: 1em;\n\n  > div {\n    line-height: 20px;\n    /* font-size: 1em; */\n    /* padding: 1em 0 1em 0; */\n  }\n  > b {\n    padding-right: 1em;\n  }\n`;\nconst Option = styled.div`\n  display: grid;\n  cursor: pointer;\n  grid-template-columns: 0.2fr 8fr;\n  grid-gap: 1em;\n  background: #d9ffb3;\n  > div {\n    line-height: 20px;\n  }\n  > span {\n    padding-right: 1em;\n    background: #336600;\n    color: #fff;\n    font-size: 2em;\n    border-radius: 50%;\n    justify-content: center;\n  }\n`;\nconst Count = styled.div`\n  /* padding:1em; */\n  font-size: 1.3em;\n  font-weight: 600;\n  padding-right: 0.5em;\n  border-bottom: 1px solid #e6e6e6;\n  padding-bottom: 1em;\n`;\nconst Explaination = styled.div``;\nconst Year = styled.div``;\n\nclass Card extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selected: \"\",\n      show: false,\n      right: false,\n      wrong: \"tomato\",\n      selectcolor: // `${this.state.show}` ? \"#336600\" :\n      \"tomato\"\n    });\n\n    _defineProperty(this, \"clickHandler\", e => {\n      const {\n        answer\n      } = this.props;\n      console.log(\"in click\", e.target.getAttribute(\"name\"), \"answer \", answer);\n\n      if (e.target.getAttribute(\"name\") == answer) {\n        this.setState({\n          selected: true,\n          show: true\n        });\n      } else {\n        this.setState({\n          selected: false,\n          show: true\n        });\n      }\n    });\n  }\n\n  render() {\n    // console.log(\"props\", this.props);\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n      count,\n      answer,\n      year\n    } = this.props;\n    return __jsx(Wrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, __jsx(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, __jsx(Question, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    }, __jsx(Count, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Question \", count + 1), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, question)), __jsx(OptionsContainer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      style: {\n        color: this.state.selectcolor\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, \"A\"), __jsx(Icon, {\n      type: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }\n    }), __jsx(Icon, {\n      type: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }, option1)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }\n    }, \"B\"), __jsx(Icon, {\n      type: \"close\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }), __jsx(Icon, {\n      type: \"check\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }\n    })), __jsx(\"div\", {\n      name: \"option2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 15\n      }\n    }, option2)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"C\")), __jsx(\"div\", {\n      name: \"option3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 15\n      }\n    }, option3)), __jsx(Option, {\n      onClick: e => this.clickHandler(e),\n      name: \"option4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    }, __jsx(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 15\n      }\n    }, __jsx(\"b\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }\n    }, \"D\")), __jsx(\"div\", {\n      name: \"option4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 15\n      }\n    }, option4))), __jsx(Explaination, {\n      style: {\n        display: this.state.show\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }\n    }, this.state.selected, \"answer : \", answer, __jsx(Year, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"UPSC \", year))));\n  }\n\n}\n\nexport default Card;","map":{"version":3,"sources":["/home/snow/Desktop/Office Projects/SNOW PROJECT/upscPyq/hoc/card.js"],"names":["React","Component","styled","Icon","Wrapper","div","Container","OptionsContainer","Question","Option","Count","Explaination","Year","Card","selected","show","right","wrong","selectcolor","e","answer","props","console","log","target","getAttribute","setState","render","question","option1","option2","option3","option4","count","year","clickHandler","color","state","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport styled from \"styled-components\";\nimport { Icon } from \"antd\";\n\nconst Wrapper = styled.div`\n  margin: 0 3em 0 3em;\n  @media only screen and (max-width: 600px) {\n    margin: unset;\n  }\n`;\nconst Container = styled.div`\n  padding: 0.5em 1em 0.5em 1em;\n  display: grid;\n  grid-row-gap: 1em;\n`;\nconst OptionsContainer = styled.div`\n  padding-left: 5em;\n  display: grid;\n  grid-row-gap: 0.2em;\n  @media only screen and (max-width: 600px) {\n    padding-left: unset;\n  }\n`;\nconst Question = styled.div`\n  display: grid;\n  grid-row-gap: 1em;\n\n  > div {\n    line-height: 20px;\n    /* font-size: 1em; */\n    /* padding: 1em 0 1em 0; */\n  }\n  > b {\n    padding-right: 1em;\n  }\n`;\n\nconst Option = styled.div`\n  display: grid;\n  cursor: pointer;\n  grid-template-columns: 0.2fr 8fr;\n  grid-gap: 1em;\n  background: #d9ffb3;\n  > div {\n    line-height: 20px;\n  }\n  > span {\n    padding-right: 1em;\n    background: #336600;\n    color: #fff;\n    font-size: 2em;\n    border-radius: 50%;\n    justify-content: center;\n  }\n`;\n\nconst Count = styled.div`\n  /* padding:1em; */\n  font-size: 1.3em;\n  font-weight: 600;\n  padding-right: 0.5em;\n  border-bottom: 1px solid #e6e6e6;\n  padding-bottom: 1em;\n`;\nconst Explaination = styled.div``;\nconst Year = styled.div``;\n\nclass Card extends Component {\n  state = {\n    selected: \"\",\n    show: false,\n    right: false,\n    wrong: \"tomato\",\n    selectcolor:\n      // `${this.state.show}` ? \"#336600\" :\n      \"tomato\"\n  };\n\n  clickHandler = e => {\n    const { answer } = this.props;\n    console.log(\"in click\", e.target.getAttribute(\"name\"), \"answer \", answer);\n    if (e.target.getAttribute(\"name\") == answer) {\n      this.setState({ selected: true, show: true });\n    } else {\n      this.setState({ selected: false, show: true });\n    }\n  };\n\n  render() {\n    // console.log(\"props\", this.props);\n    const {\n      question,\n      option1,\n      option2,\n      option3,\n      option4,\n      count,\n      answer,\n      year\n    } = this.props;\n    return (\n      <Wrapper>\n        <Container>\n          <Question>\n            <Count>Question {count + 1}</Count>\n            <div>{question}</div>\n          </Question>\n          <OptionsContainer>\n            <Option onClick={e => this.clickHandler(e)} name=\"option1\">\n              <span\n                style={{\n                  color: this.state.selectcolor\n                }}\n              >\n                <b>A</b>\n                <Icon type=\"close\" />\n                <Icon type=\"check\" />\n              </span>\n              <div name=\"option1\">{option1}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option2\">\n              <span>\n                <b>B</b>\n                <Icon type=\"close\" />\n                <Icon type=\"check\" />\n              </span>\n              <div name=\"option2\">{option2}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option3\">\n              <span>\n                <b>C</b>\n                \n              </span>\n              <div name=\"option3\">{option3}</div>\n            </Option>\n            <Option onClick={e => this.clickHandler(e)} name=\"option4\">\n              <span>\n                <b>D</b>\n              </span>\n              <div name=\"option4\">{option4}</div>\n            </Option>\n          </OptionsContainer>\n          <Explaination style={{ display: this.state.show }}>\n            {this.state.selected}\n            answer : {answer}\n            <Year>UPSC {year}</Year>\n          </Explaination>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default Card;\n"]},"metadata":{},"sourceType":"module"}